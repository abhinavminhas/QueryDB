name: Docker Inspect (Health Check - DB Containers)

inputs:
  dbPassword:
    description: 'Database password value.'
    required: true

runs:
  using: 'composite'
  
  steps:
    - name: Docker Inspect (Wait Status -> Healthy)
      shell: pwsh
      run: |
        # Script (Wait Status -> Healthy)
        $msSQLHealth=""
        $mySQLHealth=""
        $oracleHealth=""
        $postgreSQLHealth=""
        $status="healthy"
        $allHealthy=$false
        $retry=1
        do {
          $msSQLHealth = (docker inspect --format="{{json .State.Health.Status}}" mssql-db).Replace('"', '')
          $mySQLHealth = (docker inspect --format="{{json .State.Health.Status}}" mysql-db).Replace('"', '')
          $oracleHealth = (docker inspect --format="{{json .State.Health.Status}}" oracle-db).Replace('"', '')
          $postgreSQLHealth = (docker inspect --format="{{json .State.Health.Status}}" postgres-db).Replace('"', '')
          if (($msSQLHealth -ne $status) -or ($mySQLHealth -ne $status) -or ($oracleHealth -ne $status) -or ($postgreSQLHealth -ne $status)) {
            Start-Sleep -Seconds 10
            $retry ++
          } else {
            $allHealthy=$true
            break
          }
        } while ($retry -le 6)
        if ($allHealthy -eq $true) {
            Write-Host "All DB Containers Healthy ==> [ mssql-db (Status) -> '$msSQLHealth' ] | [ mysql-db (Status) -> '$mySQLHealth' ] | [ oracle-db (Status) -> '$oracleHealth' ] | [ postgres-db (Status) -> '$postgreSQLHealth' ]"
        } else {
            Write-Host "DB Container/s Not Healthy ==> [ mssql-db (Status) -> '$msSQLHealth' ] | [ mysql-db (Status) -> '$mySQLHealth' ] | [ oracle-db (Status) -> '$oracleHealth' ] | [ postgres-db (Status) -> '$postgreSQLHealth' ]"
            exit 1
        }

    - name: Step Separator
      shell: pwsh
      run: |
        # Step Separator
        Write-Host "`n########################################################################################################`n"

    - name: Docker Oracle Listener Service Status
      uses: ./.github/workflows/docker-oracle-listener-service-status

    - name: Step Separator
      shell: pwsh
      run: |
        # Step Separator
        Write-Host "`n########################################################################################################`n"

    - name: Docker Test Oracle Connection
      uses: ./.github/workflows/docker-test-oracle-connection
      env:
        ORACLE_PWD: ${{ inputs.dbPassword }}
